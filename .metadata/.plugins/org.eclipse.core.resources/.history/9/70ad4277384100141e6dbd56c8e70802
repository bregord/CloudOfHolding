package com.estimote.examples.demos;

import java.util.HashMap;
import java.util.List;

import com.estimote.sdk.Beacon;
import com.estimote.sdk.BeaconManager;
import com.estimote.sdk.Region;
import com.estimote.sdk.Utils;

import android.app.Activity;
import android.app.ActivityManager;
import android.app.ActivityManager.RunningServiceInfo;
import android.app.NotificationManager;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.*;
import android.util.Log;
import android.view.MenuItem;



public class ActivityTest extends Activity{

	  private static final String TAG = NotifyDemoActivity.class.getSimpleName();
	  private static final int NOTIFICATION_ID = 123;

	  private BeaconManager beaconManager;
	  private NotificationManager notificationManager;
	  public HashMap UUIDs = new HashMap();
	  
	  
	  
	  //public BeaconManager beaconManager; THIS STUFF ADDED TO TEST SERVICE
		public Region region = new Region("around",null,null,null);
		public BeaconManager.RangingListener listener;
		public List<Beacon> beacons;
		
		
	  
	  
	protected void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);
		
		
		setContentView(R.layout.main);
		    getActionBar().setDisplayHomeAsUpEnabled(true);
	    
		  //THIS AND   Intent i= new Intent(this, pickupPollingService.class);
		 // potentially add data to the intent
		 //i.putExtra("KEY1", "Value to be used by the service");
		//USE THIS  this.startService(i); 
		 
		   
		   //startService(new Intent(this, pickupPollingService.class));
		   
			//IMPORTANT System.out.println(isMyServiceRunning(pickupPollingService.class));
			
			try {
				beaconManager.startRanging(region);
			} catch (RemoteException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
			beaconManager.setRangingListener(listener);
			
			listener.onBeaconsDiscovered(region, beacons);

			
	}
	

	
	void onStart(Bundle savedInstanceState){
	
	}
	

	void onPause(Bundle savedInstanceState){}
	

	void onDestroy(Bundle savedInstanceState){}
	


@Override
public boolean onOptionsItemSelected(MenuItem item) {
  if (item.getItemId() == android.R.id.home) {
    finish();
    return true;
  }
  return super.onOptionsItemSelected(item);
}

private boolean isMyServiceRunning(Class<?> serviceClass) {
    ActivityManager manager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
    for (RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {
        if (serviceClass.getName().equals(service.service.getClassName())) {
            return true;
        }
    }
    return false;
}



}

