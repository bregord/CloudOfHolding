package com.estimote.examples.demos;

import java.util.HashMap;
import java.util.List;

import com.estimote.sdk.Beacon;
import com.estimote.sdk.BeaconManager;
import com.estimote.sdk.Region;
import com.estimote.sdk.Utils;
import com.estimote.sdk.utils.L;

import android.app.Activity;
import android.app.ActivityManager;
import android.app.ActivityManager.RunningServiceInfo;
import android.app.NotificationManager;
import android.app.Service;
import android.content.Context;
import android.content.Intent;
import android.os.*;
import android.util.Log;
import android.view.MenuItem;
import android.widget.ListView;



public class ActivityTest extends Activity{
/*
	  private static final String TAG = NotifyDemoActivity.class.getSimpleName();
	  private static final int NOTIFICATION_ID = 123;

	  private BeaconManager beaconManager;
	  private NotificationManager notificationManager;
	  public HashMap UUIDs = new HashMap();
	  
	  
	  
	  //public BeaconManager beaconManager; THIS STUFF ADDED TO TEST SERVICE
		public Region region = new Region("around",null,null,null);
		public BeaconManager.RangingListener listener;
		public List<Beacon> beacons;
		
	*/	
		
		  private static final String TAG = ListBeaconsActivity.class.getSimpleName();

		  public static final String EXTRAS_TARGET_ACTIVITY = "extrasTargetActivity";
		  public static final String EXTRAS_BEACON = "extrasBeacon";

		  private static final int REQUEST_ENABLE_BT = 1234;
		  private static final Region ALL_ESTIMOTE_BEACONS_REGION = new Region("rid", null, null, null);

		  private BeaconManager beaconManager;
		  private LeDeviceListAdapter adapter;


	  
	protected void onCreate(Bundle savedInstanceState){
		super.onCreate(savedInstanceState);		
		setContentView(R.layout.main);
		    getActionBar().setDisplayHomeAsUpEnabled(true);
	    
		  //THIS AND   Intent i= new Intent(this, pickupPollingService.class);
		 // potentially add data to the intent
		 //i.putExtra("KEY1", "Value to be used by the service");
		//USE THIS  this.startService(i); 
		 
		   
		   //startService(new Intent(this, pickupPollingService.class));
		   
			//IMPORTANT System.out.println(isMyServiceRunning(pickupPollingService.class));
			
		    // Configure device list.
		    adapter = new LeDeviceListAdapter(this);
		    ListView list = (ListView) findViewById(R.id.device_list);
		    list.setAdapter(adapter);
		    list.setOnItemClickListener(createOnItemClickListener());

		    // Configure verbose debug logging.
		    L.enableDebugLogging(true);

		    // Configure BeaconManager.
		    beaconManager = new BeaconManager(this);
		    beaconManager.setRangingListener(new BeaconManager.RangingListener() {
		      @Override
		      public void onBeaconsDiscovered(Region region, final List<Beacon> beacons) {
		        // Note that results are not delivered on UI thread.
		        runOnUiThread(new Runnable() {
		          @Override
		          public void run() {
		            // Note that beacons reported here are already sorted by estimated
		            // distance between device and beacon.
		            getActionBar().setSubtitle("Found beacons: " + beacons.size());
		            adapter.replaceWith(beacons);
		          }
		        });
		      }
		    });

			
	}
	

	
	void onStart(Bundle savedInstanceState){
	
	}
	

	void onPause(Bundle savedInstanceState){}
	

	void onDestroy(Bundle savedInstanceState){}
	


@Override
public boolean onOptionsItemSelected(MenuItem item) {
  if (item.getItemId() == android.R.id.home) {
    finish();
    return true;
  }
  return super.onOptionsItemSelected(item);
}

private boolean isMyServiceRunning(Class<?> serviceClass) {
    ActivityManager manager = (ActivityManager) getSystemService(Context.ACTIVITY_SERVICE);
    for (RunningServiceInfo service : manager.getRunningServices(Integer.MAX_VALUE)) {
        if (serviceClass.getName().equals(service.service.getClassName())) {
            return true;
        }
    }
    return false;
}



}

